name: Flutter Android - Debug Forensics

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  forensic-build:
    name: Forensic Android Build (Flutter + v1 search)
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Pub packages
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock', '**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.35.1
          channel: stable

      - name: Set up Java 17 (required by AGP 8.x)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK 35 + Build Tools
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platform-tools
            platforms;android-35
            build-tools;35.0.1
            cmdline-tools;latest

      - name: Accept Android SDK licenses (auto)
        run: yes | sdkmanager --licenses

      - name: Print installed SDK packages (short)
        run: sdkmanager --list | sed -n '1,120p' || true

      - name: Flutter -- get packages (produce pubspec.lock)
        run: |
          flutter --version
          flutter clean
          flutter pub get

      - name: Save pubspec.lock to workspace
        run: cp pubspec.lock pubspec.lock || true

      - name: Dump dependency tree (pub_deps.txt)
        run: flutter pub deps > pub_deps.txt || true

      - name: Search for v1-embedding indicators (repo)
        run: |
          echo "Searching repository for v1 embedding indicators..." > grep_results.txt
          echo "=== repo: io.flutter.app occurrences ===" >> grep_results.txt
          grep -R --line-number --exclude-dir=.git --exclude-dir=build "io.flutter.app" . >> grep_results.txt 2>/dev/null || true
          echo "=== repo: registerWith occurrences ===" >> grep_results.txt
          grep -R --line-number --exclude-dir=.git --exclude-dir=build "registerWith" . >> grep_results.txt 2>/dev/null || true
          echo "=== repo: PluginRegistry occurrences ===" >> grep_results.txt
          grep -R --line-number --exclude-dir=.git --exclude-dir=build "PluginRegistry" . >> grep_results.txt 2>/dev/null || true
          echo "=== repo: FlutterActivity from io.flutter.app occurrences ===" >> grep_results.txt
          grep -R --line-number --exclude-dir=.git --exclude-dir=build "io.flutter.app.FlutterActivity" . >> grep_results.txt 2>/dev/null || true
          echo "=== End repo search ===" >> grep_results.txt

      - name: Search for v1-embedding indicators (pub cache)
        run: |
          echo "Searching pub cache for v1 embedding indicators..." >> grep_results.txt
          if [ -d "$HOME/.pub-cache" ]; then
            grep -R --line-number "io.flutter.app" "$HOME/.pub-cache" >> grep_results.txt 2>/dev/null || true
            grep -R --line-number "registerWith" "$HOME/.pub-cache" >> grep_results.txt 2>/dev/null || true
            grep -R --line-number "PluginRegistry" "$HOME/.pub-cache" >> grep_results.txt 2>/dev/null || true
          else
            echo "No pub cache directory found." >> grep_results.txt
          fi
          echo "=== End pub cache search ===" >> grep_results.txt

      - name: Save Android manifest and MainActivity for inspection
        run: |
          mkdir -p diagnostics
          if [ -f android/app/src/main/AndroidManifest.xml ]; then
            cp android/app/src/main/AndroidManifest.xml diagnostics/AndroidManifest.xml
          fi
          if [ -f android/app/src/main/kotlin/*/*/*.kt ]; then
            cp -r android/app/src/main/kotlin diagnostics/kotlin_files || true
          fi
          if [ -f android/app/src/main/java/*/*/*.java ]; then
            cp -r android/app/src/main/java diagnostics/java_files || true
          fi
          ls -R diagnostics > diagnostics/contents.txt || true

      - name: Record plugin pub cache packages (short)
        run: |
          mkdir -p diagnostics
          echo "Top-level pub cache packages (first 200 lines):" > diagnostics/pub_cache_list.txt
          if [ -d "$HOME/.pub-cache/hosted/pub.dev" ]; then
            ls -1 "$HOME/.pub-cache/hosted/pub.dev" | sed -n '1,200p' >> diagnostics/pub_cache_list.txt
          else
            echo "No hosted pub.dev cache present (first run)." >> diagnostics/pub_cache_list.txt
          fi

      - name: Build - appbundle (debug) â€” capture logs
        run: |
          set -o pipefail
          mkdir -p logs
          flutter build appbundle --debug 2>&1 | tee logs/flutter_build_appbundle_debug.log

      - name: Collect diagnostics & artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-forensics-artifacts
          path: |
            pubspec.lock
            pub_deps.txt
            grep_results.txt
            logs/flutter_build_appbundle_debug.log
            diagnostics/**
